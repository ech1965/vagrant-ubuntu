#!/bin/sh

set -e

. "$(dirname $0)/config.sh"


WORKDIR=./work
ORIG_ISO=ubuntu-$VERSION-$DISTRO-$ARCH.iso
COPY_NAME="ubuntu-$VERSION-$DISTRO-$ARCH"
DEST_ISO="$NICKNAME-ubuntu-$VERSION-$DISTRO-$ARCH.iso"
VBOX="VM-$NICKNAME-ubuntu-$VERSION-$DISTRO-$ARCH"
MOUNT="$WORKDIR/mount"
ORIG="$WORKDIR/$ORIG_ISO"
COPY="$WORKDIR/$COPY_NAME"
ISO="$WORKDIR/$DEST_ISO"
PLATFORM=$(uname)


mkdir -p $MOUNT
pushd $WORKDIR

function step_1()
{
# Create and configure a virtual machine through VirtualBox.
VBoxManage createvm \
	--name "$VBOX" \
	--basefolder "$PWD" \
	--register \
	|| true

VBoxManage modifyvm "$VBOX" \
	--ostype "Ubuntu$([ "$ARCH" = "i386" ] || echo _64)" \
	--memory 360 \
	--vram 12 \
	--acpi on --ioapic on \
	--cpus 1 \
	--pae "$([ "$ARCH" = "i386" ] && echo on || echo off)" \
	--hwvirtex on \
	--nestedpaging on \
	--accelerate3d off \
	--nic1 nat \
	--natpf1 guestssh,tcp,,"$SSH_PORT",,22 \
	--audio none \
	--clipboard disabled \
	--usb off --usbehci off \
	--vrde off \
	--teleporter off

# Mount a virtual hard disk.
VBoxManage createhd \
	--filename "$VBOX/$VBOX.vmdk" \
	--size 40000 \
	--format VMDK \
	|| true
VBoxManage storagectl "$VBOX" \
	--name SATA \
	--add sata
VBoxManage storageattach "$VBOX" \
	--storagectl SATA \
	--port 0 --device 0 \
	--type hdd --medium "$VBOX/$VBOX.vmdk"

# "Insert" install iso into virtual cd drive
VBoxManage storageattach "$VBOX" \
       --storagectl SATA \
       --port 1 --device 0 \
       --type dvddrive --medium "$DEST_ISO"


# Start the virtual machine and the OS installation.  This will take
# a while so this time it gets a GUI. Wait until installation finished
# and vm is powered off.
VBoxManage startvm "$VBOX" --type gui
echo "Waiting for installion to finish.."
until VBoxManage showvminfo "$VBOX" | grep "^State: *powered off"
do
	sleep 10
done

# Attach the VBoxGuestAdditions ISO, implicitly detaching the custom
# installation ISO in the process.
VBoxManage storageattach "$VBOX" \
	--storagectl SATA \
	--port 1 --device 0 \
	--type dvddrive --medium "$VBOX_GUEST_ADDITIONS"
}



function wait_for_ssh_ready()
{
    set +e
    while true ;  do
        echo "Wait for SSH ready"
        eval "$SSH \"pwd\" "
        RETVAL=$?
        echo $RETVAL
        if [[ $RETVAL == 0 ]] ;
        then
            break
        fi
        sleep 2
    done
    set -e
}

function wait_for_vm_down()
{

until VBoxManage showvminfo "$VBOX" | grep "^State: *powered off"
do
	sleep 3
done

}


step_1



# Power up vm again.
VBoxManage startvm "$VBOX" --

wait_for_ssh_ready

set +e
# Install guest additions.
eval "$SSH \"
	set -e
	sudo apt-get -y install linux-headers-\\\$(uname -r) build-essential
	until sudo mount /dev/cdrom /media/cdrom
	do
		sleep 1
	done
	sudo /media/cdrom/VBoxLinuxAdditions.run
\""

echo "Shutting Down"
eval "$SSH \"
	sudo umount /media/cdrom
	sleep 5
	sudo poweroff
\""

wait_for_vm_down

# Remove guest additions cd.
VBoxManage storageattach "$VBOX" \
        --storagectl SATA \
        --port 1 --device 0 \
        --type dvddrive --medium emptydrive


popd
