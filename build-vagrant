#!/bin/sh

set -e

. "$(dirname $0)/config.sh"

WORKDIR=./work
ORIG_ISO=ubuntu-$VERSION-$DISTRO-$ARCH.iso
COPY_NAME="ubuntu-$VERSION-$DISTRO-$ARCH"
DEST_ISO="$NICKNAME-ubuntu-$VERSION-$DISTRO-$ARCH.iso"
BOX_NAME="$NICKNAME-bionic-$DISTRO-$ARCH"
VBOX="VM-$NICKNAME-ubuntu-$VERSION-$DISTRO-$ARCH"
MOUNT="$WORKDIR/mount"
ORIG="$WORKDIR/$ORIG_ISO"
COPY="$WORKDIR/$COPY_NAME"
ISO="$WORKDIR/$DEST_ISO"
PLATFORM=$(uname)

function wait_for_ssh_ready()
{
    set +e
    while true ;  do
        echo "Wait for SSH ready"
        eval "$SSH \"pwd\" "
        RETVAL=$?
        echo $RETVAL
        if [[ $RETVAL == 0 ]] ;
        then
            break
        fi
        sleep 2
    done
    set -e
}

function wait_for_vm_down()
{
    until VBoxManage showvminfo "$VBOX" | grep "^State: *powered off"
    do
	    sleep 3
    done
}

# Start the virtual machine.  Spin slowly until SSH is usable.
VBoxManage startvm "$VBOX" --type gui

wait_for_ssh_ready
# Install Ruby, RubyGems, and Chef as Vagrant requires.
eval "$SSH \"
	set -e
	sudo apt-get -y install build-essential ruby-dev rubygems
	sudo gem install --no-rdoc --no-ri chef
	echo 'PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/var/lib/gems/1.8/bin\"' | sudo tee /etc/environment >/dev/null
 \""
set -x
#set +e
# Shutdown the virtual machine.
eval "$SSH \"sudo shutdown -h now\"" || true
wait_for_vm_down

# Now build the Vagrant box file.
vagrant package --base "$VBOX"
mv "package.box" \
	"$WORKDIR/$BOX_NAME.box"

echo "Successfully built vagrant box!"

# Creating Vagrant boxes ruins the normal VM setup so get rid of them.
eval "$(dirname $0)/clean-vbox"
